<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>libnifalcon: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.9 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="main.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>libnifalcon::FalconFirmware Member List</h1>This is the complete list of members for <a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a>, including all inherited members.<p><table>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#ec6aad7ad7468138ee50639ab71e5f23a9f7d6ac10d58c375eedaf9a223262bf">BLUE_LED</a> enum value</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#4cd1aa411fb29acac58f0c8654e2d3e2">DECLARE_LOGGER</a>()</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [private]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#c99223d022d2c7dc2c6f1411143f926c7f50a4e9166a738b0b7431a6d4d6f532">ENCODER_1_HOMED</a> enum value</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#c99223d022d2c7dc2c6f1411143f926cb5598037adc03de30d1c667c847bb11e">ENCODER_2_HOMED</a> enum value</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#c99223d022d2c7dc2c6f1411143f926c1ccd6c2a37ee2974612de15698d713f9">ENCODER_3_HOMED</a> enum value</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#e7a058d55c44fda48ce7abc8414c57b7644aa9400a8c0ad4701f78daa35c0634">FALCON_FIRMWARE_CHECKSUM_MISMATCH</a> enum value</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#e7a058d55c44fda48ce7abc8414c57b7d4cfe2e4bbe188b2c952d7a43b75b53a">FALCON_FIRMWARE_FILE_NOT_VALID</a> enum value</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#e7a058d55c44fda48ce7abc8414c57b7cb8de1384f6a81e644a5f3facbc1c01e">FALCON_FIRMWARE_NO_COMM_SET</a> enum value</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#e7a058d55c44fda48ce7abc8414c57b70e5cb7862476b6856691de0639947ebc">FALCON_FIRMWARE_NO_FIRMWARE_LOADED</a> enum value</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#e7a058d55c44fda48ce7abc8414c57b735cdc89e7517fcd864af610ab11c00e6">FALCON_FIRMWARE_NO_FIRMWARE_SET</a> enum value</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_core.html#7721bcda7fabc97af5ee2acd8de715ce">FalconCore</a>()</td><td><a class="el" href="classlibnifalcon_1_1_falcon_core.html">libnifalcon::FalconCore</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#922a518c6e2d13648ac7c2d6510a7d6f">FalconFirmware</a>()</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#b3b8aeb591e14ae37f2da71f4cef7527">FalconFirmwareErrorValues</a></td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#65824498e44d1290f8b1db1e7be8a4aa">FalconFirmwareHomingValues</a></td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#9b20e73c512491b94e30125f94798b57">FalconFirmwareLEDValues</a></td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#3bef513a41e3b3cca9242aa61a5fc91a">getEncoderValues</a>()</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_core.html#caac4b3a29fc7ca419cdfc58d7bb45c5">getErrorCode</a>()</td><td><a class="el" href="classlibnifalcon_1_1_falcon_core.html">libnifalcon::FalconCore</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#b7cafc57b649b1a71db500de1717afc4">getGripInfo</a>()=0</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [pure virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#2e69dc9b068fb87b1ad46e685f65c754">getGripInfoSize</a>()=0</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [pure virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#1f36d914785a4ddf027caf74ff4221d2">getHomingModeStatus</a>()</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#92a436453dfcd0cabb76fd6696e51a09">getLEDStatus</a>()</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#34d49c7bcedb43d72b63824b6cdc104a">getLoopCount</a>()</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#e2c1dba449049f0cbf07152f000a373d">getRawReturn</a>()</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#ec6aad7ad7468138ee50639ab71e5f231d6620f065fbbdd4fc71204d42792a05">GREEN_LED</a> enum value</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#49b1fd5e396239b1d0021a15e46a154a">isFirmwareLoaded</a>()</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#68699673879edae13266f17771d67510">isHomed</a>()</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#074e31eb3a53f1ce113fb08bbfce6849">loadFirmware</a>(unsigned int retries, bool skip_checksum=false)</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#af1ccd638ce9eb3523417a35e1229e1c">loadFirmware</a>(bool skip_checksum=false)</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#81b12c6b1b868aaef06ccc6ba177f87b">loadFirmware</a>(bool skip_checksum, const unsigned int &amp;firmware_size, uint8_t *buffer)</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#48b21f3fafb624d586fc56c05659c452">m_encoderValues</a></td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_core.html#713cd8619d876f4b2276ef7e3bf87bff">m_errorCode</a></td><td><a class="el" href="classlibnifalcon_1_1_falcon_core.html">libnifalcon::FalconCore</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#8e1584b07e380cadcee5360c9f38470f">m_falconComm</a></td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#809799a97869fb22928e6cf2dd80bed8">m_firmwareFilename</a></td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#b53b6a50048084073197ed7e7783363d">m_forceValues</a></td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#602c83c79de6646d464375940f49d32f">m_hasWritten</a></td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#8bd1a72988c9fc2ba940a3e0b644b517">m_homingMode</a></td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#537a0b7ff8c7205e305864af4468f7d7">m_homingStatus</a></td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#d1d6394bd7f478eef98e261cf9abfc1a">m_isFirmwareLoaded</a></td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#379c97caa2a802852da0f89cde131101">m_ledStatus</a></td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#428dc3019b9356436b8846d0b76d1616">m_loopCount</a></td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#a5d22048bebb124b099ac191d0501dca">m_outputCount</a></td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [protected]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#ec6aad7ad7468138ee50639ab71e5f23b056552f4ecd896022f69038397756fe">RED_LED</a> enum value</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#9a2acca5b9b27dc5947d81774f35267a">resetFirmwareState</a>()</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#0f5d7231ee5d9a6455804761b03fa637">runIOLoop</a>()=0</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [pure virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#a90795129d60bdf9190d2d83534c735f">setFalconComm</a>(boost::shared_ptr&lt; FalconComm &gt; f)</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#8118c6a332529b77fa6a7287f34664df">setFirmwareFile</a>(const std::string &amp;filename)</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#0afe4d2c5f34d2d0fb74a60330004bd7">setForces</a>(const boost::array&lt; int, 3 &gt;(&amp;force))</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#1ea25ac2b6df54ba4209573f9becb027">setHomingMode</a>(bool value)</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#2a8627509b25e44e861c4435ed680b35">setLEDStatus</a>(unsigned int leds)</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [inline]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_core.html#c42232e791cc501723cd235e0d9a5e78">~FalconCore</a>()</td><td><a class="el" href="classlibnifalcon_1_1_falcon_core.html">libnifalcon::FalconCore</a></td><td><code> [inline, virtual]</code></td></tr>
  <tr class="memlist"><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html#de8bfb0572bd70fdd7f9e4ddbfdad969">~FalconFirmware</a>()</td><td><a class="el" href="classlibnifalcon_1_1_falcon_firmware.html">libnifalcon::FalconFirmware</a></td><td><code> [inline, virtual]</code></td></tr>
</table></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Sun Sep 20 12:24:30 2009 for libnifalcon by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.9 </small></address>
</body>
</html>
