<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>libnifalcon: libnifalcon::FalconCLIBase Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.9 -->
<script type="text/javascript">
<!--
function changeDisplayState (e){
  var num=this.id.replace(/[^[0-9]/g,'');
  var button=this.firstChild;
  var sectionDiv=document.getElementById('dynsection'+num);
  if (sectionDiv.style.display=='none'||sectionDiv.style.display==''){
    sectionDiv.style.display='block';
    button.src='open.gif';
  }else{
    sectionDiv.style.display='none';
    button.src='closed.gif';
  }
}
function initDynSections(){
  var divs=document.getElementsByTagName('div');
  var sectionCounter=1;
  for(var i=0;i<divs.length-1;i++){
    if(divs[i].className=='dynheader'&&divs[i+1].className=='dynsection'){
      var header=divs[i];
      var section=divs[i+1];
      var button=header.firstChild;
      if (button!='IMG'){
        divs[i].insertBefore(document.createTextNode(' '),divs[i].firstChild);
        button=document.createElement('img');
        divs[i].insertBefore(button,divs[i].firstChild);
      }
      header.style.cursor='pointer';
      header.onclick=changeDisplayState;
      header.id='dynheader'+sectionCounter;
      button.src='closed.gif';
      section.id='dynsection'+sectionCounter;
      section.style.display='none';
      section.style.marginLeft='14px';
      sectionCounter++;
    }
  }
}
window.onload = initDynSections;
-->
</script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="main.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.html"><span>Class&nbsp;List</span></a></li>
      <li><a href="hierarchy.html"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
  <div class="navpath"><a class="el" href="namespacelibnifalcon.html">libnifalcon</a>::<a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html">FalconCLIBase</a>
  </div>
</div>
<div class="contents">
<h1>libnifalcon::FalconCLIBase Class Reference<br>
<small>
[<a class="el" href="group___utility_classes.html">Utility Classes</a>]</small>
</h1><!-- doxytag: class="libnifalcon::FalconCLIBase" --><code>#include &lt;FalconCLIBase.h&gt;</code>
<p>

<p>
<a href="classlibnifalcon_1_1_falcon_c_l_i_base-members.html">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Types</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom">{ <a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#77be9eeb2c7941ad31f039c13363ab8ef02416859f5bf790e199dea2308d96ee">DEVICE_OPTIONS</a> =  0x1, 
<a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#77be9eeb2c7941ad31f039c13363ab8eadcd64cc818b4de9cd7663166e34f68b">COMM_OPTIONS</a> =  0x2, 
<a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#77be9eeb2c7941ad31f039c13363ab8e205c1abc46056978c7d2a867428db481">FIRMWARE_OPTIONS</a> =  0x4
 }</td></tr>

<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#cae3a21d6ea37db5f5c934ce52ecd4fe">FalconCLIBase</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#63c6b1a53f677d0919877777ee711104">~FalconCLIBase</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#db8d682886255e5a5ab0b5d60349342f">addOptions</a> (int value)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#36b440ee7851a3ff93ba8fda80d103e6">parseOptions</a> (int argc, char **argv)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#97ce632ac6642ee8e8bdcf56ac9f828b">outputProgramOptions</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#59250f5b546022cd15aa75c97c418994">calibrateDevice</a> ()</td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">boost::shared_ptr&lt; <a class="el" href="classlibnifalcon_1_1_falcon_device.html">FalconDevice</a> &gt;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#b4e8856c9cf32f4f2a401366e9a91552">m_falconDevice</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">boost::program_options::options_description&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#0304cfae474d5fc837abe44efccb1237">m_progOptions</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">boost::program_options::variables_map&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#70a3932275d13fec27725da8e08d9876">m_varMap</a></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#8ff9f5b092b44f4138970660fff18993">m_displayCalibrationMessage</a></td></tr>

<tr><td colspan="2"><br><h2>Private Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#af342275e5b9c2928a5ec0a4387ddfdc">DECLARE_LOGGER</a> ()</td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html">FalconCLIBase</a> provides an simple framework for building test applications with <a class="el" href="namespacelibnifalcon.html">libnifalcon</a>. It wraps the information needed from the user into a set of boost::program_options, and does the work of parsing command line options for:<p>
<ul>
<li>Device counts and connections</li><li>Firmware loading</li><li>Communications (if more that one comm core is available)</li></ul>
<p>
The <a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html">FalconCLIBase</a> class is only available if the boost::program_options library is available on the system.<p>
See the falcon_test_cli program for an example of a test suite program built using <a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html">FalconCLIBase</a> <hr><h2>Member Enumeration Documentation</h2>
<a class="anchor" name="77be9eeb2c7941ad31f039c13363ab8e"></a><!-- doxytag: member="libnifalcon::FalconCLIBase::@9" ref="77be9eeb2c7941ad31f039c13363ab8e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">anonymous enum          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Enumeration of options that this class provides <dl compact><dt><b>Enumerator: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" name="77be9eeb2c7941ad31f039c13363ab8ef02416859f5bf790e199dea2308d96ee"></a><!-- doxytag: member="DEVICE_OPTIONS" ref="77be9eeb2c7941ad31f039c13363ab8ef02416859f5bf790e199dea2308d96ee" args="" -->DEVICE_OPTIONS</em>&nbsp;</td><td>
Allows user to choose device index, see device count, etc... </td></tr>
<tr><td valign="top"><em><a class="anchor" name="77be9eeb2c7941ad31f039c13363ab8eadcd64cc818b4de9cd7663166e34f68b"></a><!-- doxytag: member="COMM_OPTIONS" ref="77be9eeb2c7941ad31f039c13363ab8eadcd64cc818b4de9cd7663166e34f68b" args="" -->COMM_OPTIONS</em>&nbsp;</td><td>
Allows user to choose communications type. Not commonly used since comm is usually set by default in <a class="el" href="classlibnifalcon_1_1_falcon_device.html">FalconDevice</a> now (see <a class="el" href="classlibnifalcon_1_1_falcon_device.html">FalconDevice</a> constructor). </td></tr>
<tr><td valign="top"><em><a class="anchor" name="77be9eeb2c7941ad31f039c13363ab8e205c1abc46056978c7d2a867428db481"></a><!-- doxytag: member="FIRMWARE_OPTIONS" ref="77be9eeb2c7941ad31f039c13363ab8e205c1abc46056978c7d2a867428db481" args="" -->FIRMWARE_OPTIONS</em>&nbsp;</td><td>
Allows user to choose firmware type, load firmware, etc... </td></tr>
</table>
</dl>

</div>
</div><p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="cae3a21d6ea37db5f5c934ce52ecd4fe"></a><!-- doxytag: member="libnifalcon::FalconCLIBase::FalconCLIBase" ref="cae3a21d6ea37db5f5c934ce52ecd4fe" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">libnifalcon::FalconCLIBase::FalconCLIBase           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor 
</div>
</div><p>
<a class="anchor" name="63c6b1a53f677d0919877777ee711104"></a><!-- doxytag: member="libnifalcon::FalconCLIBase::~FalconCLIBase" ref="63c6b1a53f677d0919877777ee711104" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual libnifalcon::FalconCLIBase::~FalconCLIBase           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [inline, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Destructor 
</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="db8d682886255e5a5ab0b5d60349342f"></a><!-- doxytag: member="libnifalcon::FalconCLIBase::addOptions" ref="db8d682886255e5a5ab0b5d60349342f" args="(int value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libnifalcon::FalconCLIBase::addOptions           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>value</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [protected, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Builds options map. Overridden to add application specific options 
</div>
</div><p>
<a class="anchor" name="59250f5b546022cd15aa75c97c418994"></a><!-- doxytag: member="libnifalcon::FalconCLIBase::calibrateDevice" ref="59250f5b546022cd15aa75c97c418994" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool libnifalcon::FalconCLIBase::calibrateDevice           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Conveinence function for handling device calibration 
</div>
</div><p>
<a class="anchor" name="af342275e5b9c2928a5ec0a4387ddfdc"></a><!-- doxytag: member="libnifalcon::FalconCLIBase::DECLARE_LOGGER" ref="af342275e5b9c2928a5ec0a4387ddfdc" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">libnifalcon::FalconCLIBase::DECLARE_LOGGER           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [private]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="97ce632ac6642ee8e8bdcf56ac9f828b"></a><!-- doxytag: member="libnifalcon::FalconCLIBase::outputProgramOptions" ref="97ce632ac6642ee8e8bdcf56ac9f828b" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void libnifalcon::FalconCLIBase::outputProgramOptions           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Prints help message 
</div>
</div><p>
<a class="anchor" name="36b440ee7851a3ff93ba8fda80d103e6"></a><!-- doxytag: member="libnifalcon::FalconCLIBase::parseOptions" ref="36b440ee7851a3ff93ba8fda80d103e6" args="(int argc, char **argv)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool libnifalcon::FalconCLIBase::parseOptions           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **&nbsp;</td>
          <td class="paramname"> <em>argv</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [protected, virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Parses options off command line. Overridden to handle application specific options<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>True if command line options are parsed correctly, false otherwise </dd></dl>

</div>
</div><p>
<hr><h2>Member Data Documentation</h2>
<a class="anchor" name="8ff9f5b092b44f4138970660fff18993"></a><!-- doxytag: member="libnifalcon::FalconCLIBase::m_displayCalibrationMessage" ref="8ff9f5b092b44f4138970660fff18993" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#8ff9f5b092b44f4138970660fff18993">libnifalcon::FalconCLIBase::m_displayCalibrationMessage</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
String to display with calibration instructions 
</div>
</div><p>
<a class="anchor" name="b4e8856c9cf32f4f2a401366e9a91552"></a><!-- doxytag: member="libnifalcon::FalconCLIBase::m_falconDevice" ref="b4e8856c9cf32f4f2a401366e9a91552" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">boost::shared_ptr&lt;<a class="el" href="classlibnifalcon_1_1_falcon_device.html">FalconDevice</a>&gt; <a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#b4e8856c9cf32f4f2a401366e9a91552">libnifalcon::FalconCLIBase::m_falconDevice</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Internal device structure 
</div>
</div><p>
<a class="anchor" name="0304cfae474d5fc837abe44efccb1237"></a><!-- doxytag: member="libnifalcon::FalconCLIBase::m_progOptions" ref="0304cfae474d5fc837abe44efccb1237" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">boost::program_options::options_description <a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#0304cfae474d5fc837abe44efccb1237">libnifalcon::FalconCLIBase::m_progOptions</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Structure of options that we'll allow 
</div>
</div><p>
<a class="anchor" name="70a3932275d13fec27725da8e08d9876"></a><!-- doxytag: member="libnifalcon::FalconCLIBase::m_varMap" ref="70a3932275d13fec27725da8e08d9876" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">boost::program_options::variables_map <a class="el" href="classlibnifalcon_1_1_falcon_c_l_i_base.html#70a3932275d13fec27725da8e08d9876">libnifalcon::FalconCLIBase::m_varMap</a><code> [protected]</code>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Options passed to us through the command line 
</div>
</div><p>
<hr>The documentation for this class was generated from the following files:<ul>
<li>local/libnifalcon-1.0.1/include/falcon/util/<a class="el" href="_falcon_c_l_i_base_8h.html">FalconCLIBase.h</a><li>local/libnifalcon-1.0.1/src/util/<a class="el" href="_falcon_c_l_i_base_8cpp.html">FalconCLIBase.cpp</a></ul>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Sun Sep 20 12:24:31 2009 for libnifalcon by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.9 </small></address>
</body>
</html>
