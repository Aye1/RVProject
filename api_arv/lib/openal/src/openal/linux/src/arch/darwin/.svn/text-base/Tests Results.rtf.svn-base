{\rtf1\mac\ansicpg10000\cocoartf100
{\fonttbl\f0\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14220\viewh7820\viewkind0
\pard\tx2880\tx4320\tx5760\tx7200\ql\qnatural

\f0\fs24 \cf0 This is the results of the test programs compiled with alpha 5 version of the MOSX Backend and the default branch of the OpenAL CVS. I didn't have time to check deeply each example, but I did it for some.\
\
OK : 31\
OK but... : 5\
Can't test : 6\
FAIL : 11\
\
testalinitexit	OK\
testalut	OK\
testbufferuniq	OK\
testcallback	Can't test (Don't have the test file : "adpcm.adp")\
testcapture	Can't test (void *grab_read_native() is not implemented under MOSX).\
testchannel	FAIL : Start OK but sound stops quickly (at the 15th iteration actually)\
testchannel2	Can't test (int set_nativechannel() & float get_nativechannel() are not implemented under MOSX).\
testda	OK\
testdevice	OK\
testdoppler	OK but can't hear any doppler effect...\
testext	OK\
testgain	OK\
testgainlinear	OK\
testgendelbuffer_error	OK\
testgendelsource_error	OK\
testleak	Can't test (Don't have the test file : "adpcm.adp")\
testleak2	Can't test (Don't have the test file : "adpcm.adp")\
testlistener	OK\
testlistener2	OK\
testlistener3	OK but can't hear angle modifications...\
\pard\tx2880\tx4320\tx5760\tx7200\tx8360\ql\qnatural
\cf0 testlistener4	OK but can't hear angle modifications...\
\pard\tx2880\tx4320\tx5760\tx7200\ql\qnatural
\cf0 testloop	see problem #1 \
testmath	OK, at least I think.\
testmp3	FAIL : Could not GetProc alutLoadMP3_LOKI\
testmp32	FAIL : Could not GetProc alutLoadMP3_LOKI\
testmulti	OK\
testmultialut	OK\
testmultichannel	OK\
testmulticontext	OK\
testmulticontext2	OK\
testmultimp3	FAIL : Could not GetProc alutLoadMP3_LOKI\
testmultinothread	OK, but sounds very bad at the beginning (expected behaviour under MOSX)\
testnothread	OK\
testorient	OK\
testpause	OK\
testpitch	OK\
testpitch2	FAIL : No sound\
testpitch3	OK -> with problem #2 and modif #1\
testpitch4	FAIL : No sound\
testpitchnothread	OK\
testpitchnothread2	OK\
testqueue	FAIL ? Over appears before end of source\
testqueue2	FAIL ? Over appears before end of source\
testqueue3	FAIL ? Over appears before end of source\
testrelative	OK, but sound doesn't seem to move\
testreverb	OK, but must make 10^5 more micro_sleep to hear sound. Makes me think micro_sleep is broken.\
testsingle	OK -> with problem #2 and modif #1\
testsourcestop	OK\
testsourceuniq	OK\
teststartstop	OK\
teststream	Can't test (Don't have the test file : "rawpcm.pcm")\
teststrings	OK\
testtime	FAIL ? Over appears before end of source\
testvorbis	FAIL : Could not GetProc alutLoadVorbis_LOKI\
\
\
Problems :\
#1 : It seems something goes wrong with AL_LOOPING. in testloop : after alSourceStop() AL_LOOPING is set to false even before we explicitely set it. then we set it to false in the test app, and asking for the loop state is OK (returns false). then we call alSourcePlay() and ask again for the looping state : it has been now strangely reseted to true. The solution is to change the looping value whiel the source is still playing, but is this a normal behaviour? I guess no.\
\
#2 : when a mixer source is destroyed, the bid_queue.read_index of the attached source is set to the size of the bid_queue. So when reallocating a new mix source for the same source, the bid is invalid because bid queue read index is out of range (1buffer too far). See modif #1 for a solution.\
\
Modifications :\
#1 : al_mixer.c, line 719 : mixer modif when reallocating for a stopped source -> I guess this is the modif Joe made Monday.}
